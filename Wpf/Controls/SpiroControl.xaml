<UserControl x:Class="SpiroNet.Wpf.SpiroControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SpiroNet.Wpf"
             xmlns:spiro="clr-namespace:SpiroNet;assembly=SpiroNet"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1040"
             Background="White"
             SnapsToDevicePixels="True" UseLayoutRounding="True"
             TextOptions.TextFormattingMode="Display">
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding Commands.NewCommand}" Gesture="Ctrl+N"/>
        <KeyBinding Command="{Binding Commands.OpenCommand}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{Binding Commands.SaveAsCommand}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{Binding Commands.ExportCommand}" Gesture="Ctrl+E"/>
        <KeyBinding Command="{Binding Commands.ExitCommand}" Gesture="Alt+F4"/>
    </UserControl.InputBindings>
    <UserControl.Resources>
        <local:ShapeToDataConverter x:Key="ShapeToDataConverterKey"/>
        <local:EnumToBooleanConverter x:Key="EnumToBooleanConverterKey"/>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Menu Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Background="{x:Null}">
            <MenuItem Header="_File">
                <MenuItem Command="{Binding Commands.NewCommand}" Header="_New" InputGestureText="Ctrl+N"/>
                <Separator/>
                <MenuItem Command="{Binding Commands.OpenCommand}" Header="_Open..." InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem Command="{Binding Commands.SaveAsCommand}" Header="_Save As..." InputGestureText="Ctrl+S"/>
                <Separator/>
                <MenuItem Command="{Binding Commands.ExportCommand}" Header="_Export..." InputGestureText="Ctrl+E"/>
                <Separator/>
                <MenuItem Command="{Binding Commands.ExitCommand}" Header="E_xit" InputGestureText="Alt+F4"/>
            </MenuItem>
        </Menu>
        <Grid Width="160"
              Grid.Column="0"
              Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListBox x:Name="shapesListBox"
                     ItemsSource="{Binding Drawing.Shapes}"
                     VerticalAlignment="Stretch" 
                     HorizontalContentAlignment="Stretch"
                     BorderBrush="{x:Null}"
                     BorderThickness="0"
                     Margin="4,4,4,2"
                     Grid.Row="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <TextBox x:Name="dataTextBox"
                     AcceptsReturn="True"
                     AcceptsTab="True"
                     IsReadOnly="True"
                     BorderBrush="{x:Null}"
                     BorderThickness="0"
                     Height="240"
                     VerticalScrollBarVisibility="Auto"
                     HorizontalScrollBarVisibility="Auto"
                     Margin="4,2,4,4"
                     Grid.Row="1">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource ShapeToDataConverterKey}" FallbackValue="{x:Null}">
                        <Binding ElementName="shapesListBox" Path="SelectedItem" FallbackValue="{x:Null}"/>
                        <Binding Path="Data" FallbackValue="{x:Null}"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto" 
                      HorizontalScrollBarVisibility="Auto"
                      Grid.Column="1"
                      Grid.Row="1">
            <local:SpiroCanvas x:Name="canvas" 
                               Editor="{Binding}"
                               Width="{Binding Drawing.Width}" 
                               Height="{Binding Drawing.Height}" 
                               Background="LightGray"
                               Focusable="True"
                               FocusVisualStyle="{x:Null}">
                <local:SpiroCanvas.InputBindings>
                    <KeyBinding Command="{Binding Commands.IsStrokedCommand}" Key="K" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.IsFilledCommand}" Key="F" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.IsClosedCommand}" Key="D" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.IsTaggedCommand}" Key="T" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="Corner" Key="V" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="G4" Key="O" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="G2" Key="C" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="Left" Key="OemOpenBrackets" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="Right" Key="OemCloseBrackets" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="End" Key="Z" Modifiers=""/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="OpenContour" Key="OemOpenBrackets" Modifiers="Shift"/>
                    <KeyBinding Command="{Binding Commands.PointTypeCommand}" CommandParameter="EndOpenContour" Key="OemCloseBrackets" Modifiers="Shift"/>
                </local:SpiroCanvas.InputBindings>
            </local:SpiroCanvas>
        </ScrollViewer>
        <TabControl Grid.Column="2" Grid.Row="1" Width="200" Margin="4,0,4,4">
            <TabItem Header="State">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel>
                        <GroupBox Header="Drawing Size" Margin="4,2,4,2">
                            <StackPanel>
                                <TextBox Text="{Binding Drawing.Width}" Margin="1"/>
                                <TextBox Text="{Binding Drawing.Height}" Margin="1"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Snap Mode" Margin="4,2,4,2">
                            <StackPanel>
                                <TextBox Text="{Binding State.SnapX}" Margin="1"/>
                                <TextBox Text="{Binding State.SnapY}" Margin="1"/>
                                <CheckBox IsChecked="{Binding State.EnableSnap}" 
                                          VerticalContentAlignment="Center" 
                                          Content="Enable Snap" 
                                          Margin="1">
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="New/Selected Shape" Margin="4,2,4,2">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding State.IsStroked, Mode=OneWay}" 
                                          Command="{Binding Commands.IsStrokedCommand}"
                                          VerticalContentAlignment="Center" 
                                          Content="Is Stroked      k" 
                                          Margin="1">
                                    <CheckBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="Is stroked path shape" FontWeight="Bold"/>
                                        </StackPanel>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding State.IsFilled, Mode=OneWay}" 
                                          Command="{Binding Commands.IsFilledCommand}"
                                          VerticalContentAlignment="Center" 
                                          Content="Is Filled       f" 
                                          Margin="1">
                                    <CheckBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="Is filled path shape" FontWeight="Bold"/>
                                        </StackPanel>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding State.IsClosed, Mode=OneWay}" 
                                          Command="{Binding Commands.IsClosedCommand}"
                                          VerticalContentAlignment="Center" 
                                          Content="Is Closed       d" 
                                          Margin="1">
                                    <CheckBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="Is closed spiro shape" FontWeight="Bold"/>
                                            <TextBlock Text="Whether points describe a closed (True) or open (False) contour."/>
                                        </StackPanel>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding State.IsTagged, Mode=OneWay}" 
                                          Command="{Binding Commands.IsTaggedCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Is Tagged       t" 
                                          Margin="1">
                                    <CheckBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="Is tagged spiro shape" FontWeight="Bold"/>
                                            <TextBlock Text="This requires that spiro control points be tagged according to convention. A closed curve will have an extra control point attached to the end of it with a type of 'End'."/>
                                            <TextBlock Text="The location of this last point is irrelevant."/>
                                            <TextBlock Text="In an open contour the point types of the first and last control points are going to be ignored."/>
                                        </StackPanel>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="New/Selected Point" Margin="4,2,4,2">
                            <StackPanel>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.Corner}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="Corner"
                                             VerticalContentAlignment="Center"
                                             Content="Corner          v" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="A corner point" FontWeight="Bold"/>
                                            <TextBlock Text="Where the slopes and curvatures of the incoming and outgoing splines are unconstrained."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.G4}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="G4"
                                             VerticalContentAlignment="Center"
                                             Content="G4              o" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="A G4 curve point" FontWeight="Bold"/>
                                            <TextBlock Text="Continuous up to the fourth derivative."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.G2}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="G2"
                                             VerticalContentAlignment="Center" 
                                             Content="G2              c" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="A G2 curve point" FontWeight="Bold"/>
                                            <TextBlock Text="Continuous up to the second derivative."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.Left}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="Left"
                                             VerticalContentAlignment="Center" 
                                             Content="Left            [" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="A left constraint point" FontWeight="Bold"/>
                                            <TextBlock Text="Used to connect a curved line to a straight one."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.Right}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="Right"
                                             VerticalContentAlignment="Center" 
                                             Content="Right           ]" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="A right constraint point" FontWeight="Bold"/>
                                            <TextBlock Text="Used to connect a straight line to a curved one."/>
                                            <TextBlock Text="If you have a contour which is drawn clockwise, and you have a straight segment at the top, then the left point of that straight segment should be a left constraint, and the right point should be a right constraint."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.End}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="End"
                                             VerticalContentAlignment="Center" 
                                             Content="End             z" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="End point" FontWeight="Bold"/>
                                            <TextBlock Text="For a closed contour add an extra cp with a ty set to 'end'."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.OpenContour}}" 
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="OpenContour"
                                             VerticalContentAlignment="Center" 
                                             Content="OpenContour     {" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="Open contour" FontWeight="Bold"/>
                                            <TextBlock Text="For an open contour the first cp must have a ty set to 'open contour'."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=State.PointType, Converter={StaticResource EnumToBooleanConverterKey}, ConverterParameter={x:Static spiro:SpiroPointType.EndOpenContour}}"
                                             Command="{Binding Commands.PointTypeCommand}"
                                             CommandParameter="EndOpenContour"
                                             VerticalContentAlignment="Center" 
                                             Content="EndOpenContour  }" 
                                             Margin="1">
                                    <RadioButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="End open contour" FontWeight="Bold"/>
                                            <TextBlock Text="For an open contour the last cp must have a ty set to 'end open contour'."/>
                                        </StackPanel>
                                    </RadioButton.ToolTip>
                                </RadioButton>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Options" Margin="4,2,4,2">
                            <CheckBox IsChecked="{Binding State.DisplayKnots}" 
                                      Command="{Binding Commands.InvalidateCommand}"
                                      VerticalContentAlignment="Center" 
                                      Content="Display Knots" 
                                      Margin="1">
                            </CheckBox>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Script">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Script/plate:" TextAlignment="Left" Foreground="Black" Margin="4,4,4,0"/>
                    <TextBox x:Name="scriptTextBox"
                             AcceptsReturn="True"
                             AcceptsTab="True"
                             IsReadOnly="False"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollBarVisibility="Auto"
                             Margin="4,0,4,0"
                             Grid.Row="0">
                    </TextBox>
                    <Button Content="Run" Command="{Binding Commands.ExecuteScriptCommand}" 
                            CommandParameter="{Binding ElementName=scriptTextBox, Path=Text}" 
                            Margin="4,4,4,0"
                            Grid.Row="1">
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="Help">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel>
                        <TextBlock Text="Mouse Left:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Begin Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Add Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Select Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Select Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Move Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Move Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Right" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Finish Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Insert Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Middle:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Remove Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Remove Point" TextAlignment="Left" Margin="4,0,4,0"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
